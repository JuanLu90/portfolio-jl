---
import Header from "../components/Header.astro";

const {
  title = "Juan Luis Moreno | Frontend Developer",
  description = "Front-end developer specializing in JavaScript. Real-world projects, modern UI, and a focus on performance.",
  canonical = "https://www.juanlumoreno.dev",
} = Astro.props;
---

<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <title>{title}</title>

    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <meta name="description" content={description} />
    <meta name="robots" content="index,follow" />
    <link rel="canonical" href={canonical} />
    <meta name="theme-color" content="#121E28" />
    <meta name="generator" content={Astro.generator} />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700;800&display=swap"
      rel="stylesheet"
    />
  </head>
  <body
    class="font-sans text-primary m-0 bg-slate-900 max-w-3xl w-full mx-auto mt-24 mb-28 px-4"
  >
    <Header />
    <slot />
  </body>
</html>

<style>
  body {
    background-color: #0f172a;
    background-image: radial-gradient(
      ellipse 75% 75% at 50% -20%,
      rgba(230, 188, 36, 0.08),
      rgba(80, 70, 140, 0.35),
      transparent
    );
  }
</style>

<script is:inline>
  const run = () => {
    const sections = document.querySelectorAll("section[id]");
    const navLinks = document.querySelectorAll("[data-spy-link]");

    if (!sections.length || !navLinks.length) return;

    const setActive = (hash) => {
      navLinks.forEach((a) => {
        const active = a.getAttribute("href") === hash;
        a.classList.toggle("text-orange-300", active);
        a.classList.toggle("text-slate-300", !active);
        a.setAttribute("aria-current", active ? "true" : "false");
      });
    };

    const io = new IntersectionObserver(
      (entries) => {
        const visible = entries
          .filter((e) => e.isIntersecting)
          .sort((a, b) => b.intersectionRatio - a.intersectionRatio)[0];
        if (visible?.target?.id) setActive("#" + visible.target.id);
      },
      {
        root: null,
        rootMargin: "-120px 0px -70% 0px",
        threshold: 0,
      }
    );

    sections.forEach((s) => io.observe(s));

    navLinks.forEach((a) => {
      a.addEventListener("click", () => {
        const href = a.getAttribute("href");
        if (href) setActive(href);
      });
    });

    if (location.hash) setActive(location.hash);
  };

  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", run, { once: true });
  } else {
    run();
  }
  document.addEventListener("astro:page-load", run);
</script>

<script type="application/ld+json" is:inline>
  {
    "@context": "https://schema.org",
    "@type": "Person",
    "name": "Juan Luis Moreno",
    "jobTitle": "Frontend Developer",
    "url": "https://www.juanlumoreno.dev",
    "sameAs": [
      "https://github.com/JuanLu90",
      "https://www.linkedin.com/in/juanlumoreno/"
    ]
  }
</script>

<script type="application/ld+json" is:inline>
  {
    "@context": "https://schema.org",
    "@type": "SoftwareApplication",
    "name": "SaaS Admin Dashboard",
    "applicationCategory": "BusinessApplication",
    "operatingSystem": "Web",
    "url": "https://dashboard-sass-admin.vercel.app/",
    "creator": {
      "@type": "Person",
      "name": "Juan Luis Moreno"
    }
  }
</script>
